#!/usr/bin/env python3

import sys
import os
import re

import click

"""
"""

DEBUG = True


def Debug(inp_line):
    if DEBUG:
        print(f"DEBUG: {inp_line}")


def parse(inp_file, keep=False):
    CLASSNAME = inp_file.replace(
        '.py', '').replace('.', '_').replace('+', '_')

    out_file = CLASSNAME + '.py'
    tmp_file = "tmp.py"

    Debug(f"Open file {inp_file}")

    with open(tmp_file, 'w') as out:
        with open(inp_file, 'r') as inp:
            for inp_line in inp:
                inp_line = inp_line.rstrip('\n')

                # Debug(f"# {inp_line}")

                out_line = inp_line

                if re.match(r'^\s*class\s+', inp_line):
                    Debug(f"found class definition: {inp_line}")
                    match = re.match(
                        r'^class\s+(?P<class>.+)\((?P<parameter>.+)\):.*$', inp_line)
                    parameter = match.group(2)

                    out_line = f"class {CLASSNAME}({parameter}):"
                    Debug(f"change to             : {out_line}")

                out.write(out_line + '\n')

    os.rename(tmp_file, out_file)

    if not keep and inp_file != out_file:
        os.remove(inp_file)


"""
"""


def walk(rootdir='.', pattern='*', recurse=True):
    for root, dirs, files in os.walk(rootdir):
        for folder in dirs:
            d_name = root + "/" + folder

            walk(d_name, pattern)

        for file in files:
            f_name = root + '/' + file

            if re.match(pattern, file):
                parse(f_name)


"""

prog <filename> .... <filename>

prog --all [ --recurse ] [<folder>]

"""


@click.command()
@click.option('--recurse', default=False, is_flag=True)
@click.option('--all', default=False, is_flag=True)
@click.argument('args', nargs=-1, type=click.UNPROCESSED)
def main(args, recurse, all):
    if (len(args) > 0):
        folder = args[0]
    else:
        folder = "."

    if all:
        walk(folder, recurse=recurse)
    else:
        for file in args:
            parse(file)

    # walk(folder)


if __name__ == "__main__":
    main()
